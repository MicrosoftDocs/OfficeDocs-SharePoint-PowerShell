### YamlMime:PowershellCmdlet
summary: |-
  Returns the services instance for a specific server or the entire farm.
module: sharepoint-server
notes: ""
syntaxes:
- >-
  Get-SPServiceInstance [[-Identity] <SPServiceInstancePipeBind>]

   [-AssignmentCollection <SPAssignmentCollection>] [-All] [<CommonParameters>]
- >-
  Get-SPServiceInstance -Server <SPServerPipeBind> [-AssignmentCollection <SPAssignmentCollection>] [-All]

   [<CommonParameters>]
examples:
- title: '--------------EXAMPLE-----------------'
  code: |-
    Get-SPServiceInstance -Server ServerA
  description: |-
    This example displays the service instances from a given server.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: All
  description: |+
    Returns all services instance in the farm.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="SPAssignmentCollection" data-throw-if-not-resolved="False" />
  name: AssignmentCollection
  description: |+
    Manages objects for the purpose of proper disposal. Use of objects, such as SPWeb or SPSite, can use large amounts of memory and use of these objects in Windows PowerShell scripts requires proper memory management. Using the SPAssignment object, you can assign objects to a variable and dispose of the objects after they are needed to free up memory. When SPWeb, SPSite, or SPSiteAdministration objects are used, the objects are automatically disposed of if an assignment collection or the Global parameter is not used.

    When the Global parameter is used, all objects are contained in the global store. If objects are not immediately used, or disposed of by using the Stop-SPAssignment command, an out-of-memory scenario can occur.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="SPServiceInstancePipeBind" data-throw-if-not-resolved="False" />
  name: Identity
  description: |+
    Specifies the GUID of the service instance.

    The type must be a valid GUID, in the form 12345678-90ab-cdef-1234-567890bcdefgh.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="SPServerPipeBind" data-throw-if-not-resolved="False" />
  name: Server
  isRequired: true
  description: |+
    Specifies the server from which to return the service instance.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
applicable:
- SharePoint Server Subscription Edition
uid: sharepoint-server.Get-SPServiceInstance
name: Get-SPServiceInstance
description: |-
  This cmdlet contains more than one parameter set.
  You may only use parameters from one parameter set, and you may not combine parameters from different parameter sets.
  For more information about how to use parameter sets, see [Cmdlet parameter sets](https://docs.microsoft.com/powershell/scripting/developer/cmdlet/cmdlet-parameter-sets).

  The Get-SPServiceInstance cmdlet returns the services instance specified by the Identity parameter for a specific server.
  If the Server parameter is not specified, the Get-SPServiceInstance cmdlet returns results for the entire farm.

  For permissions and the most current information about Windows PowerShell for SharePoint Products, see the online documentation at [SharePoint Server Cmdlets](https://docs.microsoft.com/powershell/sharepoint/sharepoint-server/sharepoint-server-cmdlets).
metadata:
  external help file: Microsoft.SharePoint.PowerShell.dll-help.xml
  module name: SharePointServer
  online version: https://docs.microsoft.com/powershell/module/sharepoint-server/get-spserviceinstance
  applicable: SharePoint Server Subscription Edition
  title: Get-SPServiceInstance
  schema: 2.0.0
