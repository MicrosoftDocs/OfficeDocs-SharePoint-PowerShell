### YamlMime:PowershellCmdlet
summary: |-
  Refreshes the cache.
module: sharepoint-server
notes: ""
links:
- text: Update-SPRepopulateMicroblogFeedCache
  href: Update-SPRepopulateMicroblogFeedCache.yml
syntaxes:
- >-
  Update-SPRepopulateMicroblogLMTCache -ProfileServiceApplicationProxy <SPServiceApplicationProxyPipeBind>

   [-AssignmentCollection <SPAssignmentCollection>] [<CommonParameters>]
examples:
- title: '------------EXAMPLE-----------'
  code: |-
    $proxy = Get-SPServiceApplicationProxy | ?{$_.TypeName -eq 'User Profile Service Application Proxy'}
    Update-SPRepopulateMicroblogLMTCache -ProfileServiceApplicationProxy $proxy
  description: |-
    This example refreshes the cache for the specified proxy.
  summary: ""
parameters:
- type: <xref href="SPAssignmentCollection" data-throw-if-not-resolved="False" />
  name: AssignmentCollection
  description: |+
    Manages objects for the purpose of proper disposal.
    Use of objects, such as SPWeb or SPSite, can use large amounts of memory and use of these objects in Windows PowerShell scripts requires proper memory management.
    Using the SPAssignment object, you can assign objects to a variable and dispose of the objects after they are needed to free up memory.
    When SPWeb, SPSite, or SPSiteAdministration objects are used, the objects are automatically disposed of if an assignment collection or the Global parameter is not used.

    When the Global parameter is used, all objects are contained in the global store.
    If objects are not immediately used, or disposed of by using the `Stop-SPAssignment` command, an out-of-memory scenario can occur.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="SPServiceApplicationProxyPipeBind" data-throw-if-not-resolved="False" />
  name: ProfileServiceApplicationProxy
  isRequired: true
  description: |+
    Specifies the User Profile Service application proxy to update.

    The type must be in one of the following forms:


    --A valid GUID, in the form 12345678-90ab-cdef-1234-567890bcdefgh

    --A valid name of a service application proxy (for example, UserProfileSvcProxy1)

    --An instance of a valid SPServiceApplicationProxy object

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
applicable:
- SharePoint Server Subscription Edition
uid: sharepoint-server.Update-SPRepopulateMicroblogLMTCache
name: Update-SPRepopulateMicroblogLMTCache
description: |-
  Use the `Update-SPRepopulateMicroblogLMTCache` cmdlet to refresh when the Feed Cache Repopulation Job timer job fails to work.
  The `Update-SPRepopulateMicroblogLMTCache` cmdlet forcefully refreshes the last modified times of all the known persisted entities to FeedCache.

  When you refresh the cache, the `Update-SPRepopulateMicroblogLMTCache` cmdlet should be run first and then the `Update-SPRepopulateMicroblogFeedCache` cmdlet second.

  For permissions and the most current information about Windows PowerShell for SharePoint Products, see the online documentation at [SharePoint Server Cmdlets](https://learn.microsoft.com/powershell/sharepoint/sharepoint-server/sharepoint-server-cmdlets).
metadata:
  external help file: Microsoft.Office.Server.UserProfiles.dll-help.xml
  module name: SharePointServer
  online version: https://learn.microsoft.com/powershell/module/sharepoint-server/update-sprepopulatemicrobloglmtcache
  applicable: SharePoint Server Subscription Edition
  title: Update-SPRepopulateMicroblogLMTCache
  schema: 2.0.0
