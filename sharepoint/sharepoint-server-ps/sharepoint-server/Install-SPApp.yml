### YamlMime:PowershellCmdlet
summary: |-
  Installs an instance of an app.
module: sharepoint-server
notes: ""
links:
- text: Import-SPAppPackage
  href: Import-SPAppPackage.yml
syntaxes:
- >-
  Install-SPApp -Identity <SPApp> [-AssignmentCollection <SPAssignmentCollection>] [-Confirm] [-WhatIf]

   -Web <SPWebPipeBind> [<CommonParameters>]
examples:
- title: '------------EXAMPLE------------'
  code: |-
    $spapp = Import-SPAppPackage -Path .\feature-upgrade-v1.spapp -Site https://site_url -Source ([microsoft.sharepoint.administration.spappsource]::ObjectModel)
    Install-SPApp -Web https://site_url -Identity $spapp
  description: |-
    This example installs an app by first importing the app package, and then installing it.
  summary: ""
parameters:
- type: <xref href="SPAssignmentCollection" data-throw-if-not-resolved="False" />
  name: AssignmentCollection
  description: |+
    Manages objects for the purpose of proper disposal.
    Use of objects, such as SPWeb or SPSite, can use large amounts of memory and use of these objects in Windows PowerShell scripts requires proper memory management.
    Using the SPAssignment object, you can assign objects to a variable and dispose of the objects after they are needed to free up memory.
    When SPWeb, SPSite, or SPSiteAdministration objects are used, the objects are automatically disposed of if an assignment collection or the Global parameter is not used.

    When the Global parameter is used, all objects are contained in the global store.
    If objects are not immediately used, or disposed of by using the Stop-SPAssignment command, an out-of-memory scenario can occur.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before executing the command.
    For more information, type the following command: `get-help about_commonparameters`

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="SPApp" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    Specifies the app to install.
    The App object is created by using the Import-SPAppPackage cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="SPWebPipeBind" data-throw-if-not-resolved="False" />
  name: Web
  isRequired: true
  description: |+
    Specifies the SPWeb object of the app.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Displays a message that describes the effect of the command instead of executing the command.
    For more information, type the following command: `get-help about_commonparameters`

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
applicable:
- SharePoint Server Subscription Edition
uid: sharepoint-server.Install-SPApp
name: Install-SPApp
description: |-
  Use the Install-SPApp cmdlet to install an instance of an app within a web application.

  For permissions and the most current information about Windows PowerShell for SharePoint Products, see the online documentation at [SharePoint Server Cmdlets](https://learn.microsoft.com/powershell/sharepoint/sharepoint-server/sharepoint-server-cmdlets).
metadata:
  external help file: Microsoft.SharePoint.PowerShell.dll-help.xml
  module name: SharePointServer
  online version: https://learn.microsoft.com/powershell/module/sharepoint-server/install-spapp
  applicable: SharePoint Server Subscription Edition
  title: Install-SPApp
  schema: 2.0.0
