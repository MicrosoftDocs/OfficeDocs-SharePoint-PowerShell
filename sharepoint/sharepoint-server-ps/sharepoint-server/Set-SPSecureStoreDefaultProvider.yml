### YamlMime:PowershellCmdlet
summary: |-
  Updates the secure store provider.
module: sharepoint-server
notes: ""
syntaxes:
- >-
  Set-SPSecureStoreDefaultProvider -Type <Type> [-AssignmentCollection <SPAssignmentCollection>]

   [<CommonParameters>]
examples:
- title: '------------------EXAMPLE------------------'
  code: |-
    [Reflection.Assembly]::LoadFrom("C:\ContosoFolder\contosoSecureStore.dll")
    $type = [Contoso.SecureStore.ContosoSecureStoreProvider]
    Set-SPSecureStoreDefaultProvider -Type $type
  description: |-
    This example sets the custom implemented secure store provider.
  summary: ""
parameters:
- type: <xref href="SPAssignmentCollection" data-throw-if-not-resolved="False" />
  name: AssignmentCollection
  description: |+
    Manages objects for the purpose of proper disposal.
    Use of objects, such as SPWeb or SPSite, can use large amounts of memory and use of these objects in Windows PowerShell scripts requires proper memory management.
    Using the SPAssignment object, you can assign objects to a variable and dispose of the objects after they are needed to free up memory.
    When SPWeb, SPSite, or SPSiteAdministration objects are used, the objects are automatically disposed of if an assignment collection or the Global parameter is not used.

    When the Global parameter is used, all objects are contained in the global store.
    If objects are not immediately used, or disposed of by using the `Stop-SPAssignment` command, an out-of-memory scenario can occur.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="Type" data-throw-if-not-resolved="False" />
  name: Type
  isRequired: true
  description: |+
    The type must be a secure store provider type enclosed in square brackets; for example, \[Reflection.Assembly\].

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
applicable:
- SharePoint Server Subscription Edition
uid: sharepoint-server.Set-SPSecureStoreDefaultProvider
name: Set-SPSecureStoreDefaultProvider
description: |-
  The `Set-SPSecureStoreDefaultProvider` cmdlet sets or replaces the secure store provider.
  To register a third-party secure store, implement the ISecureStoreProvider interface.
  With the interface defined, place the DLL file in the global assembly cache, and then load the DLL and load the type, as shown in the example.
  You can then set the secure store provider.

  For permissions and the most current information about Windows PowerShell for SharePoint Products, see the online documentation at [SharePoint Server Cmdlets](https://docs.microsoft.com/powershell/sharepoint/sharepoint-server/sharepoint-server-cmdlets).
metadata:
  external help file: Microsoft.SharePoint.PowerShell.SSOUpgrade-help.xml
  module name: SharePointServer
  online version: https://docs.microsoft.com/powershell/module/sharepoint-server/set-spsecurestoredefaultprovider
  applicable: SharePoint Server Subscription Edition
  title: Set-SPSecureStoreDefaultProvider
  schema: 2.0.0
