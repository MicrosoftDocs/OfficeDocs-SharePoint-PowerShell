### YamlMime:PowershellCmdlet
summary: |-
  Returns site master information.
module: sharepoint-server
notes: ""
inputs:
- name: <xref href="Microsoft.SharePoint.PowerShell.SPContentDatabasePipeBind" data-throw-if-not-resolved="False" />
  description: |-
    Microsoft.SharePoint.PowerShell.SPAssignmentCollection
outputs:
- name: <xref href="System.Object" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Get-SPSiteMaster [-ContentDatabase] <SPContentDatabasePipeBind>

   [-AssignmentCollection <SPAssignmentCollection>] [<CommonParameters>]
examples:
- title: '------------Example 1 -----------'
  code: |-
    Get-SPSiteMaster -ContentDatabase WSS_Content
  description: |-
    This example returns the site master in the database WSS_Content.
  summary: ""
parameters:
- type: <xref href="SPAssignmentCollection" data-throw-if-not-resolved="False" />
  name: AssignmentCollection
  description: |+
    Manages objects for the purpose of proper disposal. Use of objects, such as SPWeb or SPSite, can use large amounts of memory and use of these objects in Windows PowerShell scripts requires proper memory management. Using the SPAssignment object, you can assign objects to a variable and dispose of the objects after they are needed to free up memory. When SPWeb, SPSite, or SPSiteAdministration objects are used, the objects are automatically disposed of if an assignment collection or the Global parameter is not used.

    When the Global parameter is used, all objects are contained in the global store. If objects are not immediately used, or disposed of by using the Stop-SPAssignment command, an out-of-memory scenario can occur.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server 2016
  - SharePoint Server 2019
  parameterValueGroup: ""
- type: <xref href="SPContentDatabasePipeBind" data-throw-if-not-resolved="False" />
  name: ContentDatabase
  isRequired: true
  description: |+
    Specifies the name of the database to get the list of Site Masters. For example, WSS_Content.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  applicable:
  - SharePoint Server 2016
  - SharePoint Server 2019
  parameterValueGroup: ""
applicable:
- SharePoint Server 2016
- SharePoint Server 2019
uid: sharepoint-server.Get-SPSiteMaster
name: Get-SPSiteMaster
description: |-
  Use the Get-SPSiteMaster cmdlet to display site master information in the farm.

  Typically the following information is displayed:

  * ContentDatabase

  * SiteId

  * TemplateName

  * Language

  * CompatibilityLevel

  * FeaturesToActivateOnCopy
metadata:
  external help file: Microsoft.SharePoint.PowerShell.dll-help.xml
  module name: SharePointServer
  online version: https://docs.microsoft.com/powershell/module/sharepoint-server/get-spsitemaster
  applicable: SharePoint Server 2016, SharePoint Server 2019
  title: Get-SPSiteMaster
  schema: 2.0.0
