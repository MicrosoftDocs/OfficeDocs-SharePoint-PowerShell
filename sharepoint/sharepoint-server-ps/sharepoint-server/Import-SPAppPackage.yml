### YamlMime:PowershellCmdlet
summary: |-
  Imports an app package.
module: sharepoint-server
notes: ""
links:
- text: Export-SPAppPackage
  href: Export-SPAppPackage.yml
syntaxes:
- >-
  Import-SPAppPackage -Path <String> -Source <SPAppSource> [-AssignmentCollection <SPAssignmentCollection>]

   [-Confirm] [-WhatIf] [-AssetId <String>] [-ContentMarket <String>] -Site <SPSitePipeBind> [<CommonParameters>]
examples:
- title: '-----------EXAMPLE----------'
  code: |-
    Import-SPAppPackage -Path .\feature-upgrade-v1.spapp -Site https://localhost -Source ([microsoft.sharepoint.administration.spappsource]::ObjectModel)
  description: |-
    This example imports an app package.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: AssetId
  description: |+
    Specifies the Asset Id to import.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="SPAssignmentCollection" data-throw-if-not-resolved="False" />
  name: AssignmentCollection
  description: |+
    Manages objects for the purpose of proper disposal.
    Use of objects, such as SPWeb or SPSite, can use large amounts of memory and use of these objects in Windows PowerShell scripts requires proper memory management.
    Using the SPAssignment object, you can assign objects to a variable and dispose of the objects after they are needed to free up memory.
    When SPWeb, SPSite, or SPSiteAdministration objects are used, the objects are automatically disposed of if an assignment collection or the Global parameter is not used.

    When the Global parameter is used, all objects are contained in the global store.
    If objects are not immediately used, or disposed of by using the Stop-SPAssignment command, an out-of-memory scenario can occur.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before executing the command.
    For more information, type the following command: `get-help about_commonparameters`

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ContentMarket
  description: |+
    Specifies the name of the content market.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Path
  isRequired: true
  description: |+
    Specifies the path of the input file.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="SPSitePipeBind" data-throw-if-not-resolved="False" />
  name: Site
  isRequired: true
  description: |+
    Specifies the SPSite object to import.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="SPAppSource" data-throw-if-not-resolved="False" />
  name: Source
  isRequired: true
  description: "Defines the source of the app. The source indicates where the app package originates from, for example, if the app was built by a developer but did not reside on the SharePoint Marketplace, you might use the CorporateCatalog source.\r\n\r\nThe following are valid values:\r\n\r\nInvalidSource, Marketplace, CorporateCatalog, DeveloperSite, ObjectModel, RemoteObjectModel\r\n\r\nThe following are valid sources (not parameters of -Source) of the app:\r\n\r\n--SharePoint Store (Marketplace)\r\n\r\n--App catalog (CorporateCatalog)\r\n\r\n--SharePointService - Indicates apps that were built in place with SharePoint features, for example Access Services (ObjectModel)\r\n        \r\n\r\n"
  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Displays a message that describes the effect of the command instead of executing the command.
    For more information, type the following command: `get-help about_commonparameters`

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - SharePoint Server Subscription Edition
  parameterValueGroup: ""
applicable:
- SharePoint Server Subscription Edition
uid: sharepoint-server.Import-SPAppPackage
name: Import-SPAppPackage
description: |-
  Use the Import-SPAppPackage cmdlet to import an app package from the content database and create an app inside the site collection by using the SiteCollection parameter.

  For permissions and the most current information about Windows PowerShell for SharePoint Products, see the online documentation at [SharePoint Server Cmdlets](https://learn.microsoft.com/powershell/sharepoint/sharepoint-server/sharepoint-server-cmdlets).
metadata:
  external help file: Microsoft.SharePoint.PowerShell.dll-help.xml
  module name: SharePointServer
  online version: https://learn.microsoft.com/powershell/module/sharepoint-server/import-spapppackage
  applicable: SharePoint Server Subscription Edition
  title: Import-SPAppPackage
  schema: 2.0.0
