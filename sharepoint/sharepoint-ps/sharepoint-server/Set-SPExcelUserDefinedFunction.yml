### YamlMime:PowershellCmdlet
summary: |-
  Sets properties of a user-defined function in Excel Services Application.
module: SharePointServer
notes: ""
syntaxes:
- >-
  Set-SPExcelUserDefinedFunction [-Identity] <SPExcelUDFPipeBind>

   -ExcelServiceApplication <SPExcelServiceApplicationPipeBind> [-Assembly <String>]

   [-AssemblyLocation <AssemblyLocation>] [-AssignmentCollection <SPAssignmentCollection>] [-Confirm]

   [-Description <String>] [-Enable] [-WhatIf] [<CommonParameters>]
examples:
- title: '--------------EXAMPLE 1--------------'
  code: |-
    Set-SPExcelUserDefinedFunction -ExcelServiceApplication "My Excel Service" -Identity SampleCompany.SampleApplication.SampleUdf -Description "This is the new description for the sample UDF"
  description: |-
    This example changes the description of the user-defined function (UDF) to the UDF SampleCompany.SampleApplication.SampleUdf file for the Excel Services Application Web service application named My Excel Service.
  summary: ""
- title: '--------------EXAMPLE 2--------------'
  code: |-
    Get-SPExcelServiceApplication "My Excel Service" | Set-SPExcelUserDefinedFunction -Identity SampleCompany.SampleApplication.SampleUdf -Enable: $false
  description: |-
    This example disables the sample UDF SampleCompany.SampleApplication.SampleUdf file from the Excel Services Application named My Excel Service.
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Assembly
  description: |+
    Specifies the strongly-typed name of the assembly.
    The name must be unique in the list of user-defined functions and cannot be more than 4096 alphanumeric characters long.

    The type must be a string of alphanumeric characters; for example, SampleCompany.SampleApplication.SampleUdf, C:\UDFs\SampleUdf.dll, or \\\\MyNetworkServer\UDFs\SampleUdf.dll.


  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  parameterValueGroup: ""
- type: <xref href="AssemblyLocation" data-throw-if-not-resolved="False" />
  name: AssemblyLocation
  description: |+
    Specifies the location where the assembly is stored.

    The type must be one of the following: GAC or LocalFile.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  parameterValueGroup: ""
- type: <xref href="SPAssignmentCollection" data-throw-if-not-resolved="False" />
  name: AssignmentCollection
  description: |+
    Manages objects for the purpose of proper disposal.
    Use of objects, such as SPWeb or SPSite, can use large amounts of memory and use of these objects in Windows PowerShell scripts requires proper memory management.
    Using the SPAssignment object, you can assign objects to a variable and dispose of the objects after they are needed to free up memory.
    When SPWeb, SPSite, or SPSiteAdministration objects are used, the objects are automatically disposed of if an assignment collection or the Global parameter is not used.

    When the Global parameter is used, all objects are contained in the global store.
    If objects are not immediately used, or disposed of by using the `Stop-SPAssignment` command, an out-of-memory scenario can occur.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before executing the command.
    For more information, type the following command: `get-help about_commonparameters`

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Description
  description: |+
    Specifies a display description for the user-defined function.
    The name cannot be more than 4096 alphanumeric characters long.

    The type must be a string of alphanumeric characters; for example, this is the user-defined function for consolidation reports.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Enable
  description: |+
    Activates the user-defined function for use with Excel Services Application.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  parameterValueGroup: ""
- type: <xref href="SPExcelServiceApplicationPipeBind" data-throw-if-not-resolved="False" />
  name: ExcelServiceApplication
  isRequired: true
  description: |+
    Specifies the Excel Services Application Web service application that contains the SPExcelUserDefinedFunction list object.

    The type must be a valid GUID, in the form 12345678-90ab-cdef-1234-567890bcdefgh; a valid name of an Excel Services Application Web service application in the farm (for example, MyExcelService1); or an instance of a valid SPExcelServiceApplication object.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  parameterValueGroup: ""
- type: <xref href="SPExcelUDFPipeBind" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    Specifies the SPExcelUserDefinedFunction object to update.

    The type must be a valid name of the code assembly; for example, SampleCompany.SampleApplication.SampleUdf; or an instance of a valid SPExcelUDF object.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Displays a message that describes the effect of the command instead of executing the command.
    For more information, type the following command: `get-help about_commonparameters`

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  parameterValueGroup: ""
applicable:
- SharePoint Server 2010
- SharePoint Server 2013
uid: SharePointServer.Set-SPExcelUserDefinedFunction
name: Set-SPExcelUserDefinedFunction
description: |-
  The `Set-SPExcelUserDefinedFunction` cmdlet sets properties of a user-defined function assembly. 
  Excel Services Application uses only user-defined functions that have an entry in the user-defined function list.
  User-defined functions are managed code assemblies that can be called from an Excel Services Application workbook by using standard Excel Services Application formula syntax.
  The assemblies can perform custom logic or other actions, such as refresh data.
  Windows PowerShell cmdlets operate on the entries in the user-defined function list and do not operate on the assemblies.

  For permissions and the most current information about Windows PowerShell for SharePoint Products, see the online documentation at [SharePoint Server Cmdlets](https://learn.microsoft.com/powershell/sharepoint/sharepoint-server/sharepoint-server-cmdlets).
metadata:
  external help file: sharepointserver.xml
  Module Name: Microsoft.SharePoint.Powershell
  online version: https://learn.microsoft.com/powershell/module/sharepoint-server/set-spexceluserdefinedfunction
  applicable: SharePoint Server 2010, SharePoint Server 2013
  title: Set-SPExcelUserDefinedFunction
  schema: 2.0.0
  author: techwriter40
  ms.author: pamgreen
  ms.reviewer: ""
