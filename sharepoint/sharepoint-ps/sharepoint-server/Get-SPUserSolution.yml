### YamlMime:PowershellCmdlet
summary: |-
  Returns a specified sandboxed solution.
module: SharePointServer
notes: ""
syntaxes:
- >-
  Get-SPUserSolution [[-Identity] <SPUserSolutionPipeBind>] -Site <SPSitePipeBind>

   [-AssignmentCollection <SPAssignmentCollection>] [<CommonParameters>]
examples:
- title: '-----------------EXAMPLE---------------------'
  code: |-
    Get-SPUserSolution -Site https://sitename
  description: |-
    This example displays information about sandboxed solutions in the site https://sitename.
  summary: ""
parameters:
- type: <xref href="SPAssignmentCollection" data-throw-if-not-resolved="False" />
  name: AssignmentCollection
  description: |+
    Manages objects for the purpose of proper disposal.
    Use of objects, such as SPWeb or SPSite, can use large amounts of memory and use of these objects in Windows PowerShell scripts requires proper memory management.
    Using the SPAssignment object, you can assign objects to a variable and dispose of the objects after they are needed to free up memory.
    When SPWeb, SPSite, or SPSiteAdministration objects are used, the objects are automatically disposed of if an assignment collection or the Global parameter is not used.

    When the Global parameter is used, all objects are contained in the global store.
    If objects are not immediately used, or disposed of by using the Stop-SPAssignment command, an out-of-memory scenario can occur.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  - SharePoint Server 2016
  - SharePoint Server 2019
  parameterValueGroup: ""
- type: <xref href="SPUserSolutionPipeBind" data-throw-if-not-resolved="False" />
  name: Identity
  description: |+
    Specifies the sandboxed solution to get.

    The type must be a valid name of a user solution (for example, UserSolution1); or an instance of a valid SPUserSolution object.

  defaultValue: None
  position: "1"
  aliases: ""
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  - SharePoint Server 2016
  - SharePoint Server 2019
  parameterValueGroup: ""
- type: <xref href="SPSitePipeBind" data-throw-if-not-resolved="False" />
  name: Site
  isRequired: true
  description: |+
    Specifies the site collection that contains the sandboxed solution.

    The type must be a valid GUID, in the form 12345678-90ab-cdef-1234-567890bcdefgh; a valid URL, in the form https://server_name; or an instance of a valid SPSite object.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  - SharePoint Server 2016
  - SharePoint Server 2019
  parameterValueGroup: ""
applicable:
- SharePoint Server 2010
- SharePoint Server 2013
- SharePoint Server 2016
- SharePoint Server 2019
uid: SharePointServer.Get-SPUserSolution
name: Get-SPUserSolution
description: |-
  The Get-SPUserSolution cmdlet returns a specified sandboxed solution.
  If the Identity parameter is not specified, this cmdlet returns the collection of sandboxed solutions in the site collection.
  A user solution is a sandboxed solution.

  For permissions and the most current information about Windows PowerShell for SharePoint Products, see the online documentation at [SharePoint Server Cmdlets](https://learn.microsoft.com/powershell/sharepoint/sharepoint-server/sharepoint-server-cmdlets).
metadata:
  external help file: Microsoft.SharePoint.PowerShell.dll-help.xml
  Module Name: Microsoft.SharePoint.Powershell
  online version: https://learn.microsoft.com/powershell/module/sharepoint-server/get-spusersolution
  applicable: SharePoint Server 2010, SharePoint Server 2013, SharePoint Server 2016, SharePoint Server 2019
  title: Get-SPUserSolution
  schema: 2.0.0
  author: techwriter40
  ms.author: pamgreen
  ms.reviewer: ""
