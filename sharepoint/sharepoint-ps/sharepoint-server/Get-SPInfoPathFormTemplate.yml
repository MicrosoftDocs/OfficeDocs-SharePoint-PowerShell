### YamlMime:PowershellCmdlet
summary: |-
  Returns a InfoPath form template.
module: SharePointServer
notes: ""
syntaxes:
- >-
  Get-SPInfoPathFormTemplate [[-Identity] <SPFormTemplatePipeBind>]

   [-AssignmentCollection <SPAssignmentCollection>] [<CommonParameters>]
examples:
- title: '---------------EXAMPLE 1--------------'
  code: |-
    Get-SPInfoPathFormTemplate
  description: |-
    This example lists the Identity, DisplayName, and FormTemplateStatus property for each admininstrator-deployed InfoPath form template.
  summary: ""
- title: '---------------EXAMPLE 2--------------'
  code: |-
    C:\PS>"SomeFormTemplate.xsn" | Get-SPInfoPathFormTemplate | format-list
  description: |-
    This example lists all the properties of the specified InfoPath form template.
  summary: ""
parameters:
- type: <xref href="SPAssignmentCollection" data-throw-if-not-resolved="False" />
  name: AssignmentCollection
  description: |+
    Manages objects for the purpose of proper disposal.
    Use of objects, such as SPWeb or SPSite, can use large amounts of memory and use of these objects in Windows PowerShell scripts requires proper memory management.
    Using the SPAssignment object, you can assign objects to a variable and dispose of the objects after they are needed to free up memory.
    When SPWeb, SPSite, or SPSiteAdministration objects are used, the objects are automatically disposed of if an assignment collection or the Global parameter is not used.

    When the Global parameter is used, all objects are contained in the global store.
    If objects are not immediately used, or disposed of by using the Stop-SPAssignment command, an out-of-memory scenario can occur.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  - SharePoint Server 2016
  - SharePoint Server 2019
  parameterValueGroup: ""
- type: <xref href="SPFormTemplatePipeBind" data-throw-if-not-resolved="False" />
  name: Identity
  description: |+
    Specifies the InfoPath form template to get.

    The type must be a valid GUID, in the form 12345678-90ab-cdef-1234-567890bcdefgh; a valid name of a form template (for example, InfoPathFormTemplate1); a valid name of a form template files (for example, FormTemplateFile1.xsn); or an instance of a valid SPFormTemplate object.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  - SharePoint Server 2016
  - SharePoint Server 2019
  parameterValueGroup: ""
applicable:
- SharePoint Server 2010
- SharePoint Server 2013
- SharePoint Server 2016
- SharePoint Server 2019
uid: SharePointServer.Get-SPInfoPathFormTemplate
name: Get-SPInfoPathFormTemplate
description: |-
  The Get-SPInfoPathFormTemplate cmdlet reads a specific InfoPath form template or the collection of templates.
  If the Identity parameter is not specified, the cmdlet returns the collection of InfoPath form templates for the farm.

  For permissions and the most current information about Windows PowerShell for SharePoint Products, see the online documentation at [SharePoint Server Cmdlets](https://learn.microsoft.com/powershell/sharepoint/sharepoint-server/sharepoint-server-cmdlets).
metadata:
  external help file: Microsoft.Office.InfoPath.Server.dll-help.xml
  Module Name: Microsoft.SharePoint.Powershell
  online version: https://learn.microsoft.com/powershell/module/sharepoint-server/get-spinfopathformtemplate
  applicable: SharePoint Server 2010, SharePoint Server 2013, SharePoint Server 2016, SharePoint Server 2019
  title: Get-SPInfoPathFormTemplate
  schema: 2.0.0
  author: techwriter40
  ms.author: pamgreen
  ms.reviewer: ""
