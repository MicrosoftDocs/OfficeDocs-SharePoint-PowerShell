### YamlMime:PowershellCmdlet
summary: |-
  Returns the health of the service application proxy.
module: SharePointServer
notes: ""
inputs:
- name: <xref href="Microsoft.SharePoint.PowerShell.SPServiceApplicationProxyPipeBind" data-throw-if-not-resolved="False" />
  description: |-
    Microsoft.SharePoint.PowerShell.SPAssignmentCollection
outputs:
- name: <xref href="System.Object" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Get-SPConnectedServiceApplicationInformation [[-ServiceApplicationProxy] <SPServiceApplicationProxyPipeBind>]

   [-AssignmentCollection <SPAssignmentCollection>] [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    $validProxy = $false
    $proxy = Get-SPServiceApplicationProxy | ?{$_.TypeName -eq "User Profile Service Application Proxy"}
    $proxyHealth = Get-SPConnectedServiceApplicationInformation -ServiceApplicationProxy $proxy
    if(($proxyHealth -ne $null) -and ($proxyHealth.ApplicationAddressesState -eq "UpToDate")) {
            $validProxy = $true
        } else {
            $validProxy = $false
        }
    $validProxy
  description: |-
    This example checks the health of the service application proxy server.
  summary: ""
parameters:
- type: <xref href="SPAssignmentCollection" data-throw-if-not-resolved="False" />
  name: AssignmentCollection
  description: |+
    Manages objects for the purpose of proper disposal. Use of objects, such as SPWeb or SPSite, can use large amounts of memory and use of these objects in Windows PowerShell scripts requires proper memory management. Using the SPAssignment object, you can assign objects to a variable and dispose of the objects after they are needed to free up memory. When SPWeb, SPSite, or SPSiteAdministration objects are used, the objects are automatically disposed of if an assignment collection or the Global parameter is not used.

    When the Global parameter is used, all objects are contained in the global store. If objects are not immediately used, or disposed of by using the Stop-SPAssignment command, an out-of-memory scenario can occur.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server 2016
  - SharePoint Server 2019
  parameterValueGroup: ""
- type: <xref href="SPServiceApplicationProxyPipeBind" data-throw-if-not-resolved="False" />
  name: ServiceApplicationProxy
  description: |+
    Specifies the name of the service application proxy.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  applicable:
  - SharePoint Server 2016
  - SharePoint Server 2019
  parameterValueGroup: ""
applicable:
- SharePoint Server 2016
- SharePoint Server 2019
uid: SharePointServer.Get-SPConnectedServiceApplicationInformation
name: Get-SPConnectedServiceApplicationInformation
description: |-
  The `Get-SPConnectedServiceApplicationInformation` cmdlet checks whether the proxy to a service application is in good health.

  For permissions and the most current information about Windows PowerShell for SharePoint Products, see the online documentation at Windows PowerShell for SharePoint Server 2016, SharePoint Server 2019 reference [https://go.microsoft.com/fwlink/p/?LinkId=671715](https://go.microsoft.com/fwlink/p/?LinkId=671715).
metadata:
  external help file: Microsoft.SharePoint.PowerShell.dll-help.xml
  Module Name: Microsoft.SharePoint.Powershell
  online version: https://learn.microsoft.com/powershell/module/sharepoint-server/get-spconnectedserviceapplicationinformation
  applicable: SharePoint Server 2016, SharePoint Server 2019
  title: Get-SPConnectedServiceApplicationInformation
  schema: 2.0.0
  author: techwriter40
  ms.author: pamgreen
  ms.reviewer: ""
