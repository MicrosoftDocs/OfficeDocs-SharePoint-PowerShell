### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet runs a series of health checks against the Project Service Application.
module: SharePointServer
notes: ""
inputs:
- name: <xref href="Microsoft.Office.Project.Server.Cmdlet.PsiServiceApplicationPipeBind" data-throw-if-not-resolved="False" />
  description: |-
    Microsoft.Office.Project.Server.HealthRules.ProjectServiceApplicationHealthRuleName
    Microsoft.SharePoint.PowerShell.SPAssignmentCollection
outputs:
- name: <xref href="System.Object" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Test-SPProjectServiceApplication [-Identity] <PsiServiceApplicationPipeBind>

   [[-Rule] <ProjectServiceApplicationHealthRuleName>] [-AssignmentCollection <SPAssignmentCollection>]

   [<CommonParameters>]
examples:
- title: '---------------EXAMPLE--------------'
  code: |-
    $sa = Get-SPServiceApplication | ?{$_.TypeName -eq 'Project Application Services'}
    Test-SPProjectServiceApplication -Identity $sa
  description: |-
    This example runs all health checks again the service application named "Project Service Application."
  summary: ""
parameters:
- type: <xref href="SPAssignmentCollection" data-throw-if-not-resolved="False" />
  name: AssignmentCollection
  description: |+
    Manages objects for the purpose of proper disposal. Use of objects, such as SPWeb or SPSite, can use large amounts of memory and use of these objects in Windows PowerShell scripts requires proper memory management. Using the SPAssignment object, you can assign objects to a variable and dispose of the objects after they are needed to free up memory. When SPWeb, SPSite, or SPSiteAdministration objects are used, the objects are automatically disposed of if an assignment collection or the Global parameter is not used.

    When the Global parameter is used, all objects are contained in the global store. If objects are not immediately used, or disposed of by using the Stop-SPAssignment command, an out-of-memory scenario can occur.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - Project Server 2013
  - Project Server 2016
  - Project Server 2019
  parameterValueGroup: ""
- type: <xref href="PsiServiceApplicationPipeBind" data-throw-if-not-resolved="False" />
  name: Identity
  isRequired: true
  description: |+
    The name of the Project Service Application to test against.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  applicable:
  - Project Server 2013
  - Project Server 2016
  - Project Server 2019
  parameterValueGroup: ""
- type: <xref href="ProjectServiceApplicationHealthRuleName" data-throw-if-not-resolved="False" />
  name: Rule
  description: |+
    Which rule to run against the service application.

    Valid rules are:

    All, CalcServiceWorkerState, QueueInFlightJobs, QueueServiceInternalState

    Project Server 2013 has this additional rule which is not available in Project Server 2016, Project Server 2019:

    QueueSiteCheck

    Project Server 2016, Project Server 2019 added this additional rule:

    DatabasePermissions

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  applicable:
  - Project Server 2013
  - Project Server 2016
  - Project Server 2019
  parameterValueGroup: All, QueueServiceInternalState, QueueInFlightJobs, CalcServiceWorkerState, DatabasePermissions
applicable:
- Project Server 2013
- Project Server 2016
- Project Server 2019
uid: SharePointServer.Test-SPProjectServiceApplication
name: Test-SPProjectServiceApplication
description: |-
  This cmdlet runs a series of health checks against the Project Service Application.
metadata:
  external help file: microsoft.office.project.server.stsadmcommandhandler.dll-help.xml
  Module Name: Microsoft.SharePoint.Powershell
  online version: https://docs.microsoft.com/powershell/module/sharepoint-server/test-spprojectserviceapplication
  applicable: Project Server 2013, Project Server 2016, Project Server 2019
  title: Test-SPProjectServiceApplication
  schema: 2.0.0
  author: techwriter40
  ms.author: pamgreen
  ms.reviewer: ""
