### YamlMime:PowershellCmdlet
summary: |-
  Returns a list of objects or diagnostic levels.
module: SharePointServer
notes: ""
syntaxes:
- Get-SPLogLevel [-AssignmentCollection <SPAssignmentCollection>] [-Identity <String[]>] [<CommonParameters>]
examples:
- title: '--------------EXAMPLE 1-----------------'
  code: |-
    Get-SPLogLevel
  description: |-
    This example displays throttle levels for all categories.
  summary: ""
- title: '--------------EXAMPLE 2-----------------'
  code: |-
    Get-SPLogLevel -Identity "Category1"
  description: |-
    This example displays the throttle level for the Category1 category.
  summary: ""
- title: '--------------EXAMPLE 3-----------------'
  code: |-
    C:\PS>"Cat1", "Cat2", "Cat3" | Get-SpLogLevel
  description: |-
    This example displays the throttle level for multiple categories.
  summary: ""
- title: '--------------EXAMPLE 4-----------------'
  code: |-
    Get-SPLogLevel -Identity "Area:*"
  description: |-
    This example displays the throttle level for all categories in one area.
  summary: ""
parameters:
- type: <xref href="SPAssignmentCollection" data-throw-if-not-resolved="False" />
  name: AssignmentCollection
  description: |+
    Manages objects for the purpose of proper disposal.
    Use of objects, such as SPWeb or SPSite, can use large amounts of memory and use of these objects in Windows PowerShell scripts requires proper memory management.
    Using the SPAssignment object, you can assign objects to a variable and dispose of the objects after they are needed to free up memory.
    When SPWeb, SPSite, or SPSiteAdministration objects are used, the objects are automatically disposed of if an assignment collection or the Global parameter is not used.

    When the Global parameter is used, all objects are contained in the global store.
    If objects are not immediately used, or disposed of by using the Stop-SPAssignment command, an out-of-memory scenario can occur.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  - SharePoint Server 2016
  - SharePoint Server 2019
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Identity
  description: |+
    Specifies a valid category name; for example, Backup and Restore, or Administration.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  applicable:
  - SharePoint Server 2010
  - SharePoint Server 2013
  - SharePoint Server 2016
  - SharePoint Server 2019
  parameterValueGroup: ""
applicable:
- SharePoint Server 2010
- SharePoint Server 2013
- SharePoint Server 2016
- SharePoint Server 2019
uid: SharePointServer.Get-SPLogLevel
name: Get-SPLogLevel
description: |-
  The Get-SPLogLevel cmdlet displays a list of objects or diagnostic levels based on the criteria specified.
  If no parameter is specified, a list of all diagnostic levels for all categories is returned.

  For permissions and the most current information about Windows PowerShell for SharePoint Products, see the online documentation at [SharePoint Server Cmdlets](https://docs.microsoft.com/powershell/sharepoint/sharepoint-server/sharepoint-server-cmdlets).
metadata:
  external help file: Microsoft.SharePoint.PowerShell.dll-help.xml
  Module Name: Microsoft.SharePoint.Powershell
  online version: https://docs.microsoft.com/powershell/module/sharepoint-server/get-sploglevel
  applicable: SharePoint Server 2010, SharePoint Server 2013, SharePoint Server 2016, SharePoint Server 2019
  title: Get-SPLogLevel
  schema: 2.0.0
  author: techwriter40
  ms.author: pamgreen
  ms.reviewer: ""
