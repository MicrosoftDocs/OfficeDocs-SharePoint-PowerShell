### YamlMime:PowershellCmdlet
summary: |-
  > [!TIP]
  > We encourage you to make improvements to this documentation. Please navigate to https://github.com/pnp/powershell/blob/dev/documentation/Add-PnPListItem.md to change this file.

  Adds an item to the list and sets the creation time to the current date and time. The author is set to the current authenticated user executing the cmdlet. In order to set the author to a different user, please refer to Set-PnPListItem.
module: PnP.Powershell
links:
- text: Microsoft 365 Patterns and Practices
  href: https://aka.ms/m365pnp
syntaxes:
- >-
  Add-PnPListItem [-List] <ListPipeBind> [-ContentType <ContentTypePipeBind>] [-Values <Hashtable>]

   [-Folder <String>] [-Label <String>] [-Connection <PnPConnection>] [<CommonParameters>]
- >-
  Add-PnPListItem [-List] <ListPipeBind> -Batch <PnPBatch> [-ContentType <ContentTypePipeBind>] [-Values <Hashtable>]

   [-Folder <String>] [-Connection <PnPConnection>] [<CommonParameters>]
examples:
- title: EXAMPLE 1
  code: |-
    Add-PnPListItem -List "Demo List" -Values @{"Title" = "Test Title"; "Category"="Test Category"}
  description: |-
    Adds a new list item to the "Demo List", and sets both the Title and Category fields with the specified values. Notice, use the internal names of fields.
  summary: ""
- title: EXAMPLE 2
  code: |-
    Add-PnPListItem -List "Demo List" -ContentType "Company" -Values @{"Title" = "Test Title"; "Category"="Test Category"}
  description: |-
    Adds a new list item to the "Demo List", sets the content type to "Company" and sets both the Title and Category fields with the specified values. Notice, use the internal names of fields.
  summary: ""
- title: EXAMPLE 3
  code: |-
    Add-PnPListItem -List "Demo List" -Values @{"MultiUserField"="user1@domain.com","user2@domain.com"}
  description: |-
    Adds a new list item to the "Demo List" and sets the user field called MultiUserField to 2 users. Separate multiple users with a comma.
  summary: ""
- title: EXAMPLE 4
  code: |-
    Add-PnPListItem -List "Demo List" -Values @{"Title"="Sales Report"} -Folder "projects/europe"
  description: |-
    Adds a new list item to the "Demo List". It will add the list item to the europe folder which is located in the projects folder. Folders will be created if needed.
  summary: ""
- title: EXAMPLE 5
  code: |-
    Add-PnPListItem -List "Demo List" -Values @{"Title"="Sales Report"} -Label "Public"
  description: |-
    Adds a new list item to the "Demo List". Sets the retention label to "Public" if it exists on the site.
  summary: ""
- title: EXAMPLE 6
  code: |-
    $batch = New-PnPBatch
    for($i=0;$i -lt 10;$i++)
    {
        Add-PnPListItem -List "Demo List" -Values @{"Title"="Report $i"} -Batch $batch
    }
    Invoke-PnPBatch -Batch $batch
  description: |-
    This creates 10 list items by using a batched approach.
  summary: ""
parameters:
- type: <xref href="PnPBatch" data-throw-if-not-resolved="False" />
  name: Batch
  isRequired: true
  description: |+
    Optional batch object used to add items in a batched manner. See examples on how to use this.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="PnPConnection" data-throw-if-not-resolved="False" />
  name: Connection
  description: |+
    Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ContentTypePipeBind" data-throw-if-not-resolved="False" />
  name: ContentType
  description: |+
    Specify either the name, ID or an actual content type.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Folder
  description: |+
    The list relative URL of a folder. E.g. "MyFolder" for a folder located in the root of the list, or "MyFolder/SubFolder" for a folder located in the MyFolder folder which is located in the root of the list.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Label
  description: |+
    The name of the retention label.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ListPipeBind" data-throw-if-not-resolved="False" />
  name: List
  isRequired: true
  description: |+
    The ID, Title or Url of the list.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: Values
  description: |+
    Use the internal names of the fields when specifying field names.

    Single line of text: -Values @{"Title" = "Title New"}

    Multiple lines of text: -Values @{"MultiText" = "New text\n\nMore text"}

    Rich text: -Values @{"MultiText" = "&lt;strong&gt;New&lt;/strong&gt; text"}

    Choice: -Values @{"Choice" = "Value 1"}

    Number: -Values @{"Number" = "10"}

    Currency: -Values @{"Number" = "10"}

    Currency: -Values @{"Currency" = "10"}

    Date and Time: -Values @{"DateAndTime" = "03/13/2015 14:16"}

    Lookup (id of lookup value): -Values @{"Lookup" = "2"}

    Multi value lookup (id of lookup values as array 1): -Values @{"MultiLookupField" = "1","2"}

    Multi value lookup (id of lookup values as array 2): -Values @{"MultiLookupField" = 1,2}

    Multi value lookup (id of lookup values as string): -Values @{"MultiLookupField" = "1,2"}

    Yes/No: -Values @{"YesNo" = $false}

    Person/Group (id of user/group in Site User Info List or email of the user, separate multiple values with a comma): -Values @{"Person" = "user1@domain.com","21"}

    Managed Metadata (single value with path to term): -Values @{"MetadataField" = "CORPORATE|DEPARTMENTS|FINANCE"}

    Managed Metadata (single value with id of term): -Values @{"MetadataField" = "fe40a95b-2144-4fa2-b82a-0b3d0299d818"} with Id of term

    Managed Metadata (multiple values with paths to terms): -Values @{"MetadataField" = "CORPORATE|DEPARTMENTS|FINANCE","CORPORATE|DEPARTMENTS|HR"}

    Managed Metadata (multiple values with ids of terms): -Values @{"MetadataField" = "fe40a95b-2144-4fa2-b82a-0b3d0299d818","52d88107-c2a8-4bf0-adfa-04bc2305b593"}

    Hyperlink or Picture: -Values @{"Hyperlink" = "https://github.com/OfficeDev/, OfficePnp"}

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
applicable:
- SharePoint Online
uid: PnP.Powershell.Add-PnPListItem
name: Add-PnPListItem
description: ""
metadata:
  Module Name: PnP.PowerShell
  schema: 2.0.0
  applicable: SharePoint Online
  online version: https://pnp.github.io/powershell/cmdlets/Add-PnPListItem.html
  external help file: PnP.PowerShell.dll-Help.xml
  title: Add-PnPListItem
